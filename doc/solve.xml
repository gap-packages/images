<!-- %W  minimal.xml         Images documentation        Christopher Jefferson -->
<!-- %H                                                                        -->
<!-- %Y  Copyright (C) 2016, School of Comp. Sci., St Andrews, Scotland        -->


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<Chapter Label="MinimalChapter">
<Heading>Minimal and Canonical Images</Heading>

Given a group G and action A, we can define the minimal image of an object O as the smallest image
of O under any element of G, under the action A.

As a more concrete example, let us consider the minimal image of the set [2,3,5,7] under a group G.

We can first calculate all the images of our set under G, then choose the smallest one.

<Example><![CDATA[
gap> G := Group((1,2,3)(4,5,6)(7,8,9),(1,4,7)(2,5,8)(3,6,9));;
gap> List(G, g -> OnSets([2,3,5,7], g) );
[ [ 2, 3, 5, 7 ], [ 1, 2, 4, 9 ], [ 1, 3, 6, 8 ], [ 2, 4, 8, 9 ],
  [ 1, 6, 7, 8 ], [ 3, 5, 7, 9 ], [ 1, 5, 6, 8 ], [ 3, 4, 5, 7 ],
  [ 2, 4, 6, 9 ] ]
gap> Minimum(List(G, g -> OnSets([2,3,5,7], g) ) );
[ 1, 2, 4, 9 ]
]]></Example>

While this produces the correct answer, it is very inefficient, as it requires enumerating all members of G.
The images package produces a function MinimalImage, which performs this same operation, more efficiently.

<Example><![CDATA[
gap> LoadPackage("images", false);
true
gap> MinimalImage(G, [2,3,5,7], OnSets);
[ 1, 2, 4, 9 ]
]]></Example>

Often, MinimalImage is used in practice to categories objects into equivalence classes. For example,
this next example shows [2,3,5,7] and [1,6,7,8] are in the same orbit, which is different to the orbit
of [3,5,7,8].

<Example><![CDATA[
gap> MinimalImage(G, [2,3,5,7], OnSets);
[ 1, 2, 4, 9 ]
gap> MinimalImage(G, [1,6,7,8], OnSets);
[ 1, 2, 4, 9 ]
gap> MinimalImage(G, [3,5,7,8], OnSets);
[ 1, 2, 6, 8 ]
]]></Example>

Motivated by this, we can define a canonicalising function C(G,O,A) as a function which returns A(O,g) for some
g in G, under the restriction C(G,O1,A) = C(G,O2,A) if there exists h in G such that A(O1,h)=O2.

The reason to define a CanonicalImage at all is that it is often much more efficient to calculate a canonical
image, rather than the minimal image, particularly as groups get larger. CanonicalImage is used the same way as
MinimalImage.

<B>WARNING:</B> The value of MinimalImage should remain identical between versions of GAP and the Images package,
but this is NOT true for CanonicalImage. Please read the section "Repeatable Canonical Images" if you plan
on storing the canonical images generated by the Images package.

<Section Label="Function Documentation">
<Heading>Function documentation</Heading>

<#Include Label="MinimalImage" />

</Section>

</Chapter>


<!-- %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -->
<!-- %% -->
<!-- %E -->

