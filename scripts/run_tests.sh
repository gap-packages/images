#!/usr/bin/env bash
#
# DO NOT EDIT THIS FILE!
#
# If you need to run additional setup steps before the package tests,
# edit the run script in .travis.yml instead
#
# If you have any questions about this script, or think it is not general
# enough to cover your use case (i.e., you feel that you need to modify it
# anyway), please contact Max Horn <max.horn@math.uni-giessen.de>.
#
set -ex

# start GAP with custom GAP root, to ensure correct package version is loaded
GAP="$GAPROOT/bin/gap.sh -l $PWD/gaproot; --quitonbreak"

if [[ -z $TESTCLIENTSERVER ]]; then 
    # Unless explicitly turned off by setting the NO_COVERAGE environment variable,
    # we collect coverage data
    if [[ -z $NO_COVERAGE ]]; then
        mkdir $COVDIR
        GAP="$GAP --cover $COVDIR/test.coverage"
    fi
    $GAP tst/testall.g
else
    # TODO: As soon as coverage for forking stuff works, we should be forking
    #       inside a tst file.
    sudo pip install --upgrade pip
    pip install --user openmath
    pip install --user scscp

    mkdir -p $COVDIR

    echo "Starting GAP Server"
    $GAP --cover $COVDIR/test-server.coverage -q -A tst/scscp/server.g --nointeract &
    sleep 5
    echo "Testing GAP SCSCP Client"
    $GAP --cover $COVDIR/test-client.coverage -q -A tst/scscp/client.g --nointeract
    echo "Testing GAP MitM Client"
    $GAP --cover $COVDIR/test-mitm-client.coverage -q -A tst/scscp/mitm-client.g --nointeract
    echo "Testing Python Client"
    python tst/scscp/client.py
    echo "Quitting Server"
    $GAP -A tst/scscp/quit.g --nointeract
    kill %%
fi
exit 0
